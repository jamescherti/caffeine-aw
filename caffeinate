#!/usr/bin/env python3
#
# Copyright Â© 2009-2022 The Caffeine-aw Developers
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import argparse
import logging
import signal
import sys
from subprocess import call

import pkg_resources  # type: ignore
from setproctitle import setproctitle
from Xlib import display

PROGRAM_NAME = "caffeinate"
WIN_ID = None


def die(err):
    sys.exit(PROGRAM_NAME + ': ' + err)


def make_unmapped_window(wm_name):
    screen = display.Display().screen()
    window = screen.root.create_window(0, 0, 1, 1, 0, screen.root_depth)
    window.set_wm_name(wm_name)
    window.set_wm_protocols([])
    return window


# pylint: disable=unused-argument
def signal_action(*args):
    release()
    sys.exit(1)


def release():
    # pylint: disable=global-statement
    global WIN_ID
    if not WIN_ID:
        return

    if call(['xdg-screensaver', 'resume', WIN_ID]) != 0:
        die("could not uninhibit desktop idleness")

    logging.info(
        "The window %s is no longer inhibiting desktop idleness",
        WIN_ID,
    )

    WIN_ID = None


def main():
    """The command-line interface."""
    logging.basicConfig(
        level=logging.INFO,
        stream=sys.stdout,
        format="[" + PROGRAM_NAME + "] %(message)s",
    )

    setproctitle(PROGRAM_NAME)

    sys.tracebacklimit = None
    version = pkg_resources.require("caffeine-aw")[0].version

    # Handle command line arguments
    parser = argparse.ArgumentParser(
        prog=PROGRAM_NAME,
        description='Inhibit desktop idleness for the duration of COMMAND',
    )
    parser.add_argument('COMMAND', help='command to run')
    parser.add_argument('ARGUMENT', nargs='*', help='arguments to COMMAND',
                        default=None)
    parser.add_argument('-V', '--version', action='version',
                        version=PROGRAM_NAME + ' ' + version)
    args = parser.parse_args()

    # Create window to use with xdg-screensaver
    window = make_unmapped_window("caffeinate")

    # pylint: disable=global-statement
    global WIN_ID
    WIN_ID = hex(window.id)

    for sig in (signal.SIGINT, signal.SIGTERM, signal.SIGHUP):
        signal.signal(sig, signal_action)

    # Run command, bracketed by xdg-screensaver suspend/resume
    logging.info("%s has started.", PROGRAM_NAME)
    if call(['xdg-screensaver', 'suspend', WIN_ID]) != 0:
        die("could not inhibit desktop idleness")

    logging.info(
        "The window %s is now inhibiting desktop idleness",
        WIN_ID,
    )

    try:
        returncode = call([args.COMMAND] + args.ARGUMENT)
        sys.exit(returncode)
    finally:
        release()
        logging.info("%s has stopped.", PROGRAM_NAME)


if __name__ == '__main__':
    main()
